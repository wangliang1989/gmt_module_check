gmt grdmath [core] 6.1.0_43b9e79_2020.01.04 [64-bit] - Reverse Polish Notation (RPN) calculator for grids (element by element)

usage: gmt grdmath [-R<west>/<east>/<south>/<north>[+r]]
	[-A<min_area>[/<min_level>/<max_level>][+a[g|i][s|S]][+r|l][+p<percent>]]
	[-D<resolution>][+f] [-I<xinc>[<unit>][+e|n][/<yinc>[<unit>][+e|n]]]
	[-M] [-N] [-S] [-V[<level>]] [-bi[<ncol>][t][w][+l|b]] [-di<nodata>] [-e[~]<pattern>]
	[-f[i|o]<info>] [-g[a]x|y|d|X|Y|D|[<col>]z<gap>[<unit>][+n|p]]
	[-h[i|o][<nrecs>][+c][+d][+r<remark>][+t<title>]] [-i<cols>[+l][+s<scale>][+o<offset>][,...][,t[<word>]]]
	[-n[b|c|l|n][+a][+b<BC>][+c][+t<threshold>]] [-r[g|p]] [-s[<cols>][+a|r]]
	  [--PAR=<value>] A B op C op D op ... = <outgrd>

	A, B, etc are grid files, constants, or symbols (see below).
	The stack can hold up to 100 entries (given enough memory).
	Trigonometric operators expect radians unless noted otherwise.
	The operators and number of input and output arguments are:

	Name       #args   Returns
	--------------------------
	ABS        1  1    abs (A)
	ACOS       1  1    acos (A)
	ACOSH      1  1    acosh (A)
	ACOT       1  1    acot (A)
	ACOTH      1  1    acoth (A)
	ACSC       1  1    acsc (A)
	ACSCH      1  1    acsch (A)
	ADD        2  1    A + B
	AND        2  1    B if A == NaN, else A
	ARC        2  1    arc(A, B) = pi - |pi - |a-b|| for A, B in radians
	AREA       0  1    Area of each gridnode cell (spherical calculation in km^2 if geographic)
	ASEC       1  1    asec (A)
	ASECH      1  1    asech (A)
	ASIN       1  1    asin (A)
	ASINH      1  1    asinh (A)
	ATAN       1  1    atan (A)
	ATAN2      2  1    atan2 (A, B)
	ATANH      1  1    atanh (A)
	BCDF       3  1    Binomial cumulative distribution function for p = A, n = B and x = C
	BPDF       3  1    Binomial probability density function for p = A, n = B and x = C
	BEI        1  1    bei (A)
	BER        1  1    ber (A)
	BITAND     2  1    A & B (bitwise AND operator)
	BITLEFT    2  1    A << B (bitwise left-shift operator)
	BITNOT     1  1    ~A (bitwise NOT operator, i.e., return two's complement)
	BITOR      2  1    A | B (bitwise OR operator)
	BITRIGHT   2  1    A >> B (bitwise right-shift operator)
	BITTEST    2  1    1 if bit B of A is set, else 0 (bitwise TEST operator)
	BITXOR     2  1    A ^ B (bitwise XOR operator)
	CAZ        2  1    Cartesian azimuth from grid nodes to stack x,y
	CBAZ       2  1    Cartesian back-azimuth from grid nodes to stack x,y
	CDIST      2  1    Cartesian distance between grid nodes and stack x,y
	CDIST2     2  1    As CDIST but only to nodes that are != 0
	CEIL       1  1    ceil (A) (smallest integer >= A)
	CHI2CRIT   2  1    Chi-squared distribution critical value for alpha = A and nu = B
	CHI2CDF    2  1    Chi-squared cumulative distribution function for chi2 = A and nu = B
	CHI2PDF    2  1    Chi-squared probability density function for chi = A and nu = B
	COMB       2  1    Combinations n_C_r, with n = A and r = B
	CORRCOEFF  2  1    Correlation coefficient r(A, B)
	COS        1  1    cos (A) (A in radians)
	COSD       1  1    cos (A) (A in degrees)
	COSH       1  1    cosh (A)
	COT        1  1    cot (A) (A in radians)
	COTD       1  1    cot (A) (A in degrees)
	COTH       1  1    coth (A)
	PCDF       2  1    Poisson cumulative distribution function x = A and lambda = B
	PPDF       2  1    Poisson probability density function for x = A and lambda = B
	CSC        1  1    csc (A) (A in radians)
	CSCD       1  1    csc (A) (A in degrees)
	CSCH       1  1    csch (A)
	CURV       1  1    Curvature of A (Laplacian)
	D2DX2      1  1    d^2(A)/dx^2 2nd derivative
	D2DY2      1  1    d^2(A)/dy^2 2nd derivative
	D2DXY      1  1    d^2(A)/dxdy 2nd derivative
	D2R        1  1    Converts Degrees to Radians
	DDX        1  1    d(A)/dx Central 1st derivative
	DDY        1  1    d(A)/dy Central 1st derivative
	DEG2KM     1  1    Converts Spherical Degrees to Kilometers
	DENAN      2  1    Replace NaNs in A with values from B
	DILOG      1  1    dilog (A)
	DIV        2  1    A / B
	DUP        1  2    Places duplicate of A on the stack
	ECDF       2  1    Exponential cumulative distribution function for x = A and lambda = B
	ECRIT      2  1    Exponential distribution critical value for alpha = A and lambda = B
	EPDF       2  1    Exponential probability density function for x = A and lambda = B
	ERF        1  1    Error function erf (A)
	ERFC       1  1    Complementary Error function erfc (A)
	EQ         2  1    1 if A == B, else 0
	ERFINV     1  1    Inverse error function of A
	EXCH       2  2    Exchanges A and B on the stack
	EXP        1  1    exp (A)
	FACT       1  1    A! (A factorial)
	EXTREMA    1  1    Local Extrema: +2/-2 is max/min, +1/-1 is saddle with max/min in x, 0 elsewhere
	FCRIT      3  1    F distribution critical value for alpha = A, nu1 = B, and nu2 = C
	FCDF       3  1    F cumulative distribution function for F = A, nu1 = B, and nu2 = C
	FLIPLR     1  1    Reverse order of values in each row
	FLIPUD     1  1    Reverse order of values in each column
	FLOOR      1  1    floor (A) (greatest integer <= A)
	FMOD       2  1    A % B (remainder after truncated division)
	FPDF       3  1    F probability density function for F = A, nu1 = B and nu2 = C
	GE         2  1    1 if A >= B, else 0
	GT         2  1    1 if A > B, else 0
	HSV2LAB    3  3    Convert hsv to lab, with h = A, s = B and v = C
	HSV2RGB    3  3    Convert hsv to rgb, with h = A, s = B and v = C
	HSV2XYZ    3  3    Convert hsv to xyz, with h = A, s = B and v = C
	HYPOT      2  1    hypot (A, B) = sqrt (A*A + B*B)
	I0         1  1    Modified Bessel function of A (1st kind, order 0)
	I1         1  1    Modified Bessel function of A (1st kind, order 1)
	IFELSE     3  1    B if A != 0, else C
	IN         2  1    Modified Bessel function of A (1st kind, order B)
	INRANGE    3  1    1 if B <= A <= C, else 0
	INSIDE     1  1    1 when inside or on polygon(s) in A, else 0
	INV        1  1    1 / A
	ISFINITE   1  1    1 if A is finite, else 0
	ISNAN      1  1    1 if A == NaN, else 0
	J0         1  1    Bessel function of A (1st kind, order 0)
	J1         1  1    Bessel function of A (1st kind, order 1)
	JN         2  1    Bessel function of A (1st kind, order B)
	K0         1  1    Modified Kelvin function of A (2nd kind, order 0)
	K1         1  1    Modified Bessel function of A (2nd kind, order 1)
	KEI        1  1    kei (A)
	KER        1  1    ker (A)
	KM2DEG     1  1    Converts Kilometers to Spherical Degrees
	KN         2  1    Modified Bessel function of A (2nd kind, order B)
	KURT       1  1    Kurtosis of A
	LAB2HSV    3  3    Convert lab to hsv, with l = A, a = B and b = C
	LAB2RGB    3  3    Convert lab to rgb, with l = A, a = B and b = C
	LAB2XYZ    3  3    Convert lab to xyz, with l = A, a = B and b = C
	LCDF       1  1    Laplace cumulative distribution function for z = A
	LCRIT      1  1    Laplace distribution critical value for alpha = A
	LDIST      1  1    Compute minimum distance (in km if -fg) from lines in multi-segment ASCII file A
	LDISTG     0  1    As LDIST, but operates on the GSHHG dataset (see -A, -D for options)
	LDIST2     2  1    As LDIST, from lines in ASCII file B but only to nodes where A != 0
	LE         2  1    1 if A <= B, else 0
	LOG        1  1    log (A) (natural log)
	LOG10      1  1    log10 (A) (base 10)
	LOG1P      1  1    log (1+A) (accurate for small A)
	LOG2       1  1    log2 (A) (base 2)
	LMSSCL     1  1    LMS scale estimate (LMS STD) of A
	LMSSCLW    1  1    Weighted LMS scale estimate (LMS STD) of A for weights in B
	LOWER      1  1    The lowest (minimum) value of A
	LPDF       1  1    Laplace probability density function for z = A
	LRAND      2  1    Laplace random noise with mean A and std. deviation B
	LT         2  1    1 if A < B, else 0
	MAD        1  1    Median Absolute Deviation (L1 STD) of A
	MADW       2  1    Weighted Median Absolute Deviation (L1 STD) of A for weights in B
	MAX        2  1    Maximum of A and B
	MEAN       1  1    Mean value of A
	MEANW      2  1    Weighted mean value of A for weights in B
	MEDIAN     1  1    Median value of A
	MEDIANW    2  1    Weighted median value of A for weights in B
	MIN        2  1    Minimum of A and B
	MOD        2  1    A mod B (remainder after floored division)
	MODE       1  1    Mode value (Least Median of Squares) of A
	MODEW      2  1    Weighted mode value of A for weights in B
	MUL        2  1    A * B
	NAN        2  1    NaN if A == B, else A
	NEG        1  1    -A
	NEQ        2  1    1 if A != B, else 0
	NORM       1  1    Normalize (A) so max(A)-min(A) = 1
	NOT        1  1    NaN if A == NaN, 1 if A == 0, else 0
	NRAND      2  1    Normal, random values with mean A and std. deviation B
	OR         2  1    NaN if B == NaN, else A
	PDIST      1  1    Compute minimum distance (in km if -fg) from points in ASCII file A
	PDIST2     2  1    As PDIST, from points in ASCII file B but only to nodes where A != 0
	PERM       2  1    Permutations n_P_r, with n = A and r = B
	POP        1  0    Delete top element from the stack
	PLM        3  1    Associated Legendre polynomial P(A) degree B order C
	PLMg       3  1    Normalized associated Legendre polynomial P(A) degree B order C (geophysical convention)
	POINT      1  2    Return mean_x mean_y of points in ASCII file A
	POW        2  1    A ^ B
	PQUANT     2  1    The B'th Quantile (0-100%) of A
	PQUANTW    3  1    The C'th Quantile (0-100%) of A for weights in B
	PSI        1  1    Psi (or Digamma) of A
	PV         3  1    Legendre function Pv(A) of degree v = real(B) + imag(C)
	QV         3  1    Legendre function Qv(A) of degree v = real(B) + imag(C)
	R2         2  1    R2 = A^2 + B^2
	R2D        1  1    Convert Radians to Degrees
	RAND       2  1    Uniform random values between A and B
	RCDF       1  1    Rayleigh cumulative distribution function for z = A
	RCRIT      1  1    Rayleigh distribution critical value for alpha = A
	RGB2HSV    3  3    Convert rgb to hsv, with r = A, g = B and b = C
	RGB2LAB    3  3    Convert rgb to lab, with r = A, g = B and b = C
	RGB2XYZ    3  3    Convert rgb to xyz, with r = A, g = B and b = C
	RINT       1  1    rint (A) (round to integral value nearest to A)
	RMS        1  1    Root-mean-square of A
	RMSW       2  1    Weighted Root-mean-square of A for weights in B
	RPDF       1  1    Rayleigh probability density function for z = A
	ROLL       2  0    Cyclicly shifts the top A stack items by an amount B
	ROTX       2  1    Rotate A by the (constant) shift B in x-direction
	ROTY       2  1    Rotate A by the (constant) shift B in y-direction
	SDIST      2  1    Spherical distance (in km) between grid nodes and stack lon,lat (A, B)
	SDIST2     2  1    As SDIST but only to nodes that are != 0
	SAZ        2  1    Spherical azimuth from grid nodes to stack x,y
	SBAZ       2  1    Spherical back-azimuth from grid nodes to stack x,y
	SEC        1  1    sec (A) (A in radians)
	SECD       1  1    sec (A) (A in degrees)
	SECH       1  1    sech (A)
	SIGN       1  1    sign (+1 or -1) of A
	SIN        1  1    sin (A) (A in radians)
	SINC       1  1    sinc (A) (sin (pi*A)/(pi*A))
	SIND       1  1    sin (A) (A in degrees)
	SINH       1  1    sinh (A)
	SKEW       1  1    Skewness of A
	SQR        1  1    A^2
	SQRT       1  1    sqrt (A)
	STD        1  1    Standard deviation of A
	STDW       2  1    Weighted standard deviation of A for weights in B
	STEP       1  1    Heaviside step function: H(A)
	STEPX      1  1    Heaviside step function in x: H(x-A)
	STEPY      1  1    Heaviside step function in y: H(y-A)
	SUB        2  1    A - B
	SUM        1  1    Sum of all values in A
	TAN        1  1    tan (A) (A in radians)
	TAND       1  1    tan (A) (A in degrees)
	TANH       1  1    tanh (A)
	TAPER      2  1    Unit weights cosine-tapered to zero within A and B of x and y grid margins
	TN         2  1    Chebyshev polynomial Tn(-1<t<+1,n), with t = A, and n = B
	TCRIT      2  1    Student's t-distribution critical value for alpha = A and nu = B
	TCDF       2  1    Student's t cumulative distribution function for t = A, and nu = B
	TPDF       2  1    Student's t probability density function for t = A and nu = B
	TRIM       3  1    Alpha-trimming for %-left = A, %-right = B, and grid = C
	UPPER      1  1    The highest (maximum) value of A
	VAR        1  1    Variance of A
	VARW       2  1    Weighted variance of A for weights in B
	WCDF       3  1    Weibull cumulative distribution function for x = A, scale = B, and shape = C
	WCRIT      3  1    Weibull distribution critical value for alpha = A, scale = B, and shape = C
	WPDF       3  1    Weibull probability density function for x = A, scale = B and shape = C
	WRAP       1  1    wrap (A). (A in radians)
	XOR        2  1    0 if A == NaN and B == NaN, NaN if B == NaN, else A
	XYZ2HSV    3  3    Convert xyz to hsv, with x = A, y = B and z = C
	XYZ2LAB    3  3    Convert xyz to lab, with x = A, y = B and z = C
	XYZ2RGB    3  3    Convert xyz to rgb, with x = A, y = B and z = C
	Y0         1  1    Bessel function of A (2nd kind, order 0)
	Y1         1  1    Bessel function of A (2nd kind, order 1)
	YLM        2  2    Re and Im orthonormalized spherical harmonics degree A order B
	YLMg       2  2    Cos and Sin normalized spherical harmonics degree A order B (geophysical convention)
	YN         2  1    Bessel function of A (2nd kind, order B)
	ZCRIT      1  1    Normal distribution critical value for alpha = A
	ZCDF       1  1    Normal cumulative distribution function for z = A
	ZPDF       1  1    Normal probability density function for z = A

	The special symbols are:

	PI                     = 3.1415926...
	E                      = 2.7182818...
	F_EPS (single eps)     = 1.192092896e-07
	EULER                  = 0.5772156...
	PHI (golden ratio)     = 1.6180339...
	XMIN, XMAX, XRANGE, XINC or NX = the corresponding constants.
	YMIN, YMAX, YRANGE, YINC or NY = the corresponding constants.
	NODE                   = grid with continuous node indices (0-(NX*NY-1)).
	NODEP                  = grid with discontinuous node indices due to padding.
	X                      = grid with x-coordinates.
	Y                      = grid with y-coordinates.
	XNORM                  = grid with normalized [-1|+1] x-coordinates.
	YNORM                  = grid with normalized [-1|+1] y-coordinates.
	XCOL                   = grid with column numbers 0, 1, ..., NX-1.
	YROW                   = grid with row numbers 0, 1, ..., NY-1.

	Use macros for frequently used long expressions; see the grdmath man page.
	Store stack to named variable via STO@<label>, recall via [RCL]@<label>, clear via CLR@<label>.

	OPTIONS: (only use -R|I|r|f if no grid files are passed as arguments).
	-A Place limits on coastline features from the GSHHG data base.
	   Features smaller than <min_area> (in km^2) or of levels (0-4) outside the min-max levels
	   will be skipped [0/4 (4 means lake inside island inside lake)].
	   Select +a and one or two codes to control how Antarctica is handled:
	     Add g to use shelf ice grounding line for Antarctica coastline, or
	     Add i to use ice/water front for Antarctica coastline [Default].
	     Add s to skip Antarctica (all data south of 60S) [use all], or
	     Add S to skip anything BUT Antarctica (all data north of 60S) [use all].
	   Append +r to only get riverlakes from level 2, or +l to only get lakes [both].
	   Append +p<percent> to exclude features whose size is < <percent>% of the full-resolution feature [use all].
	   (-A is only relevant to the LDISTG operator)
	-D Choose one of the following resolutions to use with the LDISTG operator:
	   f - full resolution (may be very slow for large regions).
	   h - high resolution (may be slow for large regions).
	   i - intermediate resolution.
	   l - low resolution [Default].
	   c - crude resolution, for busy plots that need crude continent outlines only.
	   Append +f to use a lower resolution should the chosen one not be available [abort].
	   (-A and -D apply only to operator LDISTG)
	-I Specify increment(s) and optionally append units or flags.
	   Full syntax is <xinc>[d|m|s|e|f|k|M|n|u][+e|n][/<yinc>[d|m|s|e|f|k|M|n|u][+e|n]]]
	   For geographic regions in degrees you can optionally append units from this list:
	   (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
	   Append +e to adjust the region to fit increments [Adjust increment to fit domain].
	   Alternatively, specify number of nodes by appending +n. Then, the increments
	   are calculated from the given domain and node-registration settings
	   (see Appendix B for details).  Note: If -R<grdfile> was used then -I
	   (and -R and maybe -r) have been set; use -I to override those increments.
	-M Handle map units in derivatives.  In this case, dx,dy of grid
	   will be converted from degrees lon,lat into meters (Flat-earth approximation).
	   Default computes derivatives in units of data/grid_distance.
	-N Do not perform strict domain check if several grids are involved.
	   [Default checks that domain is within 0.0001 * [xinc or yinc] of each other].
	-R Specify the min/max coordinates of your data region in user units.
	   Use dd:mm[:ss] for regions given in arc degrees, minutes [and seconds].
	   Use -R<xmin/xmax/ymin/ymax>+<unit> for regions given in projected coordinates.
	     with <unit> selected from e|f|k|M|n|u.
	   Use [yyy[-mm[-dd]]]T[hh[:mm[:ss[.xxx]]]] format for time axes.
	   Append +r if -R specifies the coordinates of the lower left and
	     upper right corners of a rectangular area.
	   Use -R<gridfile> to use its limits (and increments if applicable).
	   Use -Rg and -Rd as shorthands for -R0/360/-90/90 and -R-180/180/-90/90.
	   Derive region from closed polygons from the Digital Chart of the World (DCW):
	     Append a comma-separated list of ISO 3166 codes for countries to set region, i.e.,
	     <code1>,<code2>,... etc., using the 2-character ISO country codes (see pscoast -E+l for list).
	     To select a state of a country (if available), append .state, e.g, US.TX for Texas.
	     To select a whole continent, give =AF|AN|AS|EU|OC|NA|SA as <code>.
	     Use +r to modify the region from polygon(s): Append <inc>, <xinc>/<yinc>, or <winc>/<einc>/<sinc>/<ninc>
	     to round region to these multiples; use +R to extend region by those increments instead,
	     or use +e which is like +r but makes sure the region extends at least by 0.25 x <inc>.
	   Or use -R<code><x0>/<y0>/<n_columns>/<n_rows> for origin and grid dimensions, where
	     <code> is a 2-char combo from [T|M|B][L|C|R] (top/middle/bottom/left/center/right)
	     and grid spacing must be specified via -I<dx>[/<dy>] (also see -r).
	-S Reduce the entire Stack to a single layer by applying the next operator to
	   co-registered nodes across the stack.  You must select a reducing operator, i.e.,
	   ADD, AND, MAD, LMSSCL, MAX, MEAN, MEDIAN, MIN, MODE, MUL, RMS, STD, SUB, VAR or XOR.
	   Note: Select -S after you have placed all items of interest on the stack.
	-V Change the verbosity level (currently v).
	   Choose among 6 levels; each level adds more messages:
	     q - Quiet, not even fatal error messages.
	     n - Normal verbosity: only error messages.
	     c - Also produce compatibility warnings [Default when no -V is used].
	     v - Verbose progress messages [Default when -V is used].
	     l - Long verbose progress messages.
	     d - Debugging messages.
	-bi For binary input; [<n>]<type>[w][+l|b]; <type> = c|u|h|H|i|I|l|L|f|D.
	    Prepend <n> for the number of columns for each <type> in binary file(s) [2].
	-di Replace any <nodata> in input data with NaN.
	-e Only accept input data records that contain the string "pattern".
	   Use -e~"pattern" to only accept data records that DO NOT contain this pattern.
	   If your pattern begins with ~, escape it with \~.  To match against
	   extended regular expressions use -e[~]/regexp/[i] (i for case-insensitive).
	   Give +f<file> for a file list with such patterns, one per line.
	   To give a single pattern starting with +f, escape it with \+f.
	-f Special formatting of input/output columns (time or geographical).
	   Specify i(nput) or o(utput) [Default is both input and output].
	   Give one or more columns (or column ranges) separated by commas.
	   Append T (Calendar format), t (time relative to TIME_EPOCH),
	   f (floating point), x (longitude), y (latitude) to each item.
	   -f[i|o]g means -f[i|o]0x,1y (geographic coordinates).
	   -f[i|o]c means -f[i|o]0-1f (Cartesian coordinates).
	   -fp[<unit>] means input x,y are in projected coordinates.
	-g Use data point separations to determine if there are data gaps.
	   Append x|X or y|Y to identify data gaps in x or y coordinates,
	   respectively, and append d|D for distance gaps.  Upper case X|Y|D means
	   we first project the points (requires -J).  Append <gap>[unit][+n|p]; +n uses
	   d=prev-curr, +p uses d=curr-prev [d=|curr-prev|]; d must exceed <gap> to detect a gap.
	   For geographic data: choose from e|f|k|M|n|u [Default is meter (e)].
	   For gaps based on mapped coordinates: choose unit from c|i|p [cm].
	   For time data: the unit is controlled by TIME_UNIT.
	   For generic data: the unit is as the data implies (user units).
	   Repeat the -g option to specify multiple criteria, and add -ga
	   to indicate that all criteria must be met [just one must be met].
	-h[i|o][<n>][+c][+d][+r<remark>][+t<title>] Input/output file has [0] Header record(s) [OFF]
	   Optionally, append i for input or o for output only and/or number of header records [0].
	     -hi turns off the writing of all headers on output since none will be read.
	   Append +c to add header record with column information [none].
	   Append +d to delete headers before adding new ones [Default will append headers].
	   Append +r to add a <remark> comment to the output [none].
	   Append +t to add a <title> comment to the output [none].
	     (these strings may contain \n to indicate line-breaks)
	   For binary files, <n> is considered to mean number of bytes.
	-i Set alternate input column order and optional transformations [Default reads all columns in original order].
	   Append list of columns; t[<word>] = trailing text; use <word> to pick a word from the text.
	   Use -in for considering numerical input only.
	   (Only applies to the input files for operators LDIST, PDIST, POINT and INSIDE).
	-n[b|c|l|n][+a][+b<BC>][+c][+t<threshold>] Specify the grid interpolation mode.
	   (b = B-spline, c = bicubic, l = bilinear, n = nearest-neighbor) [Default is bicubic].
	   Append +a to switch off antialiasing (except for l) [Default: on].
	   Append +b<BC> to change boundary conditions.  <BC> can be either:
	     g for geographic, p for periodic, and n for natural boundary conditions.
	     For p and n you may optionally append x or y [default is both]:
	       x for periodic boundary conditions on x,
	       y for periodic boundary conditions on y.
	   [Default: Natural conditions, unless grid is known to be geographic].
	   Append +c to clip interpolated grid to input z-min/max [Default may exceed limits].
	   Append +t<threshold> to change the minimum weight in vicinity of NaNs. A threshold of
	   1.0 requires all nodes involved in interpolation to be non-NaN; 0.5 will interpolate
	   about half way from a non-NaN to a NaN node [Default: 0.5].
	-r Set (g)ridline- or (p)ixel-registration [Just -r sets pixel registration].
	   If not given we default to gridline registration.
	-s Suppress output for records whose z-value (col = 2) equals NaN
	   [Default prints all records].
	   Append <cols> to examine other column(s) instead [2].
	   Append +a to suppress records where any column equals NaN, or
	   append +r to reverse the suppression (only output z = NaN records).
	-^ (or -) Print short synopsis message.
	-+ (or +) Print longer synopsis message.
	-? (or no arguments) Print this usage message.
	--PAR=<value> Temporarily override GMT default setting(s) (repeatable).
	(See gmt.conf man page for GMT default parameters).
