gmt gmtmath [core] 6.1.0_43b9e79_2020.01.04 [64-bit] - Reverse Polish Notation (RPN) calculator for data tables

usage: gmt gmtmath [-A<ftable>[+e][+r][+s|w]] [-C<cols>] [-E<eigen>] [-I] [-L] [-N<n_col>[/<t_col>]] [-Q] [-S[f|l]]
	[-T[<min>/<max>/<inc>[+b|l|n]] | -T<file|list>] [-V[<level>]] [-b[i|o][<ncol>][t][w][+l|b]] [-d[i|o]<nodata>] [-e[~]<pattern>]
	[-f[i|o]<info>] [-g[a]x|y|d|X|Y|D|[<col>]z<gap>[<unit>][+n|p]] [-h[i|o][<nrecs>][+c][+d][+r<remark>][+t<title>]]
	[-i<cols>[+l][+s<scale>][+o<offset>][,...][,t[<word>]]] [-o<cols>[,...][t[<word>]]] [-q[i|o][~]<rows>[,...][+c<col>][+a|f|s]]
	[-s[<cols>][+a|r]] [--PAR=<value>] A B op C op ... = [outfile]

	A, B, etc. are table files, constants, or symbols (see below).
	To read stdin give filename as STDIN (which can appear more than once).
	The stack can hold up to 100 entries (given enough memory).
	Trigonometric operators expect radians unless noted otherwise.
	The operators and number of input and output arguments:

	Name       #args   Returns
	--------------------------
	ABS        1  1    abs (A)
	ACOS       1  1    acos (A)
	ACOSH      1  1    acosh (A)
	ACOT       1  1    acot (A)
	ACOTH      1  1    acoth (A)
	ACSC       1  1    acsc (A)
	ACSCH      1  1    acsch (A)
	ADD        2  1    A + B
	AND        2  1    B if A == NaN, else A
	ASEC       1  1    asec (A)
	ASECH      1  1    asech (A)
	ASIN       1  1    asin (A)
	ASINH      1  1    asinh (A)
	ATAN       1  1    atan (A)
	ATAN2      2  1    atan2 (A, B)
	ATANH      1  1    atanh (A)
	BCDF       3  1    Binomial cumulative distribution function for p = A, n = B and x = C
	BEI        1  1    bei (A)
	BER        1  1    ber (A)
	BPDF       3  1    Binomial probability density function for p = A, n = B and x = C
	BITAND     2  1    A & B (bitwise AND operator)
	BITLEFT    2  1    A << B (bitwise left-shift operator)
	BITNOT     1  1    ~A (bitwise NOT operator, i.e., return two's complement)
	BITOR      2  1    A | B (bitwise OR operator)
	BITRIGHT   2  1    A >> B (bitwise right-shift operator)
	BITTEST    2  1    1 if bit B of A is set, else 0 (bitwise TEST operator)
	BITXOR     2  1    A ^ B (bitwise XOR operator)
	CEIL       1  1    ceil (A) (smallest integer >= A)
	CHI2CRIT   2  1    Chi-squared distribution critical value for alpha = A and nu = B
	CHI2CDF    2  1    Chi-squared cumulative distribution function for chi2 = A and nu = B
	CHI2PDF    2  1    Chi-squared probability density function for chi = A and nu = B
	COL        1  1    Places column A on the stack
	COMB       2  1    Combinations n_C_r, with n = A and r = B
	CORRCOEFF  2  1    Correlation coefficient r(A, B)
	COS        1  1    cos (A) (A in radians)
	COSD       1  1    cos (A) (A in degrees)
	COSH       1  1    cosh (A)
	COT        1  1    cot (A) (A in radians)
	COTD       1  1    cot (A) (A in degrees)
	COTH       1  1    coth (A)
	CSC        1  1    csc (A) (A in radians)
	CSCD       1  1    csc (A) (A in degrees)
	CSCH       1  1    csch (A)
	PCDF       2  1    Poisson cumulative distribution function for x = A and lambda = B
	DDT        1  1    d(A)/dt Central 1st derivative
	D2DT2      1  1    d^2(A)/dt^2 2nd derivative
	D2R        1  1    Converts Degrees to Radians
	DENAN      2  1    Replace NaNs in A with values from B
	DILOG      1  1    dilog (A)
	DIFF       1  1    Difference (forward) between adjacent elements of A (A[1]-A[0], A[2]-A[1], ..., NaN)
	DIV        2  1    A / B
	DUP        1  2    Places duplicate of A on the stack
	ECDF       2  1    Exponential cumulative distribution function for x = A and lambda = B
	ECRIT      2  1    Exponential distribution critical value for alpha = A and lambda = B
	EPDF       2  1    Exponential probability density function for x = A and lambda = B
	ERF        1  1    Error function erf (A)
	ERFC       1  1    Complementary Error function erfc (A)
	ERFINV     1  1    Inverse error function of A
	EQ         2  1    1 if A == B, else 0
	EXCH       2  2    Exchanges A and B on the stack
	EXP        1  1    exp (A)
	FACT       1  1    A! (A factorial)
	FCRIT      3  1    F distribution critical value for alpha = A, nu1 = B, and nu2 = C
	FCDF       3  1    F cumulative distribution function for F = A, nu1 = B, and nu2 = C
	FLIPUD     1  1    Reverse order of each column
	FLOOR      1  1    floor (A) (greatest integer <= A)
	FMOD       2  1    A % B (remainder after truncated division)
	FPDF       3  1    F probability density distribution for F = A, nu1 = B and nu2 = C
	GE         2  1    1 if A >= B, else 0
	GT         2  1    1 if A > B, else 0
	HSV2LAB    3  3    Convert hsv to lab, with h = A, s = B and v = C
	HSV2RGB    3  3    Convert hsv to rgb, with h = A, s = B and v = C
	HSV2XYZ    3  3    Convert hsv to xyz, with h = A, s = B and v = C
	HYPOT      2  1    hypot (A, B) = sqrt (A*A + B*B)
	I0         1  1    Modified Bessel function of A (1st kind, order 0)
	I1         1  1    Modified Bessel function of A (1st kind, order 1)
	IFELSE     3  1    B if A != 0, else C
	IN         2  1    Modified Bessel function of A (1st kind, order B)
	INRANGE    3  1    1 if B <= A <= C, else 0
	INT        1  1    Numerically integrate A
	INV        1  1    1 / A
	ISFINITE   1  1    1 if A is finite, else 0
	ISNAN      1  1    1 if A == NaN, else 0
	J0         1  1    Bessel function of A (1st kind, order 0)
	J1         1  1    Bessel function of A (1st kind, order 1)
	JN         2  1    Bessel function of A (1st kind, order B)
	K0         1  1    Modified Kelvin function of A (2nd kind, order 0)
	K1         1  1    Modified Bessel function of A (2nd kind, order 1)
	KN         2  1    Modified Bessel function of A (2nd kind, order B)
	KEI        1  1    kei (A)
	KER        1  1    ker (A)
	KURT       1  1    Kurtosis of A
	LAB2HSV    3  3    Convert lab to hsv, with l = A, a = B and b = C
	LAB2RGB    3  3    Convert lab to rgb, with l = A, a = B and b = C
	LAB2XYZ    3  3    Convert lab to xyz, with l = A, a = B and b = C
	LCDF       1  1    Laplace cumulative distribution function for z = A
	LCRIT      1  1    Laplace distribution critical value for alpha = A
	LE         2  1    1 if A <= B, else 0
	LMSSCL     1  1    LMS scale estimate (LMS STD) of A
	LMSSCLW    1  1    Weighted LMS scale estimate (LMS STD) of A for weights in B
	LOG        1  1    log (A) (natural log)
	LOG10      1  1    log10 (A) (base 10)
	LOG1P      1  1    log (1+A) (accurate for small A)
	LOG2       1  1    log2 (A) (base 2)
	LOWER      1  1    The lowest (minimum) value of A
	LPDF       1  1    Laplace probability density function for z = A
	LRAND      2  1    Laplace random noise with mean A and std. deviation B
	LSQFIT     1  0    Current table is [A | b]; return LS solution to A * x = b via Cholesky decomposition
	LT         2  1    1 if A < B, else 0
	MAD        1  1    Median Absolute Deviation (L1 STD) of A
	MADW       2  1    Weighted Median Absolute Deviation (L1 STD) of A for weights in B
	MAX        2  1    Maximum of A and B
	MEAN       1  1    Mean value of A
	MEANW      2  1    Weighted mean value of A for weights in B
	MEDIAN     1  1    Median value of A
	MEDIANW    2  1    Weighted median value of A for weights in B
	MIN        2  1    Minimum of A and B
	MOD        2  1    A mod B (remainder after floored division)
	MODE       1  1    Mode value (Least Median of Squares) of A
	MODEW      2  1    Weighted mode value of A for weights in B
	MUL        2  1    A * B
	NAN        2  1    NaN if A == B, else A
	NEG        1  1    -A
	NEQ        2  1    1 if A != B, else 0
	NORM       1  1    Normalize (A) so max(A)-min(A) = 1
	NOT        1  1    NaN if A == NaN, 1 if A == 0, else 0
	NRAND      2  1    Normal, random values with mean A and std. deviation B
	OR         2  1    NaN if B == NaN, else A
	PERM       2  1    Permutations n_P_r, with n = A and r = B
	PLM        3  1    Associated Legendre polynomial P(A) degree B order C
	PLMg       3  1    Normalized associated Legendre polynomial P(A) degree B order C (geophysical convention)
	POP        1  0    Delete top element from the stack
	POW        2  1    A ^ B
	PPDF       2  1    Poisson probability density function for x = A and lambda = B
	PQUANT     2  1    The B'th Quantile (0-100%) of A
	PQUANTW    3  1    The C'th Quantile (0-100%) of A for weights in B
	PSI        1  1    Psi (or Digamma) of A
	PV         3  1    Legendre function Pv(A) of degree v = real(B) + imag(C)
	QV         3  1    Legendre function Qv(A) of degree v = real(B) + imag(C)
	R2         2  1    R2 = A^2 + B^2
	R2D        1  1    Convert Radians to Degrees
	RAND       2  1    Uniform random values between A and B
	RCDF       1  1    Rayleigh cumulative distribution function for z = A
	RCRIT      1  1    Rayleigh distribution critical value for alpha = A
	RGB2HSV    3  3    Convert rgb to hsv, with r = A, g = B and b = C
	RGB2LAB    3  3    Convert rgb to lab, with r = A, g = B and b = C
	RGB2XYZ    3  3    Convert rgb to xyz, with r = A, g = B and b = C
	RPDF       1  1    Rayleigh probability density function for z = A
	RINT       1  1    rint (A) (round to integral value nearest to A)
	RMS        1  1    Root-mean-square of A
	RMSW       2  1    Weighted Root-mean-square of A for weights in B
	ROLL       2  0    Cyclicly shifts the top A stack items by an amount B
	ROTT       2  1    Rotate A by the (constant) shift B in the t-direction
	SEC        1  1    sec (A) (A in radians)
	SECD       1  1    sec (A) (A in degrees)
	SECH       1  1    sech (A)
	SIGN       1  1    sign (+1 or -1) of A
	SIN        1  1    sin (A) (A in radians)
	SINC       1  1    sinc (A) (sin (pi*A)/(pi*A))
	SIND       1  1    sin (A) (A in degrees)
	SINH       1  1    sinh (A)
	SKEW       1  1    Skewness of A
	SORT       3  1    Sort all columns in stack based on column A in direction of B (-1 descending |+1 ascending)
	SQR        1  1    A^2
	SQRT       1  1    sqrt (A)
	STD        1  1    Standard deviation of A
	STDW       2  1    Weighted standard deviation of A for weights in B
	STEP       1  1    Heaviside step function H(A)
	STEPT      1  1    Heaviside step function H(t-A)
	SUB        2  1    A - B
	SUM        1  1    Cumulative sum of A
	SVDFIT     1  0    Current table is [A | b]; return LS solution to A * x = B via SVD decomposition (see -E)
	TAN        1  1    tan (A) (A in radians)
	TAND       1  1    tan (A) (A in degrees)
	TANH       1  1    tanh (A)
	TAPER      1  1    Unit weights cosine-tapered to zero within A of end margins
	TCDF       2  1    Student's t cumulative distribution function for t = A and nu = B
	TN         2  1    Chebyshev polynomial Tn(-1<A<+1) of degree B
	TPDF       2  1    Student's t probability density function for t = A and nu = B
	TCRIT      2  1    Student's t distribution critical value for alpha = A and nu = B
	UPPER      1  1    The highest (maximum) value of A
	VAR        1  1    Variance of A
	VARW       2  1    Weighted variance of A for weights in B
	WCDF       3  1    Weibull cumulative distribution function for x = A, scale = B, and shape = C
	WCRIT      3  1    Weibull distribution critical value for alpha = A, scale = B, and shape = C
	WPDF       3  1    Weibull probability density function for x = A, scale = B and shape = C
	XOR        2  1    B if A == NaN, else A
	XYZ2HSV    3  3    Convert xyz to hsv, with x = A, y = B and z = C
	XYZ2LAB    3  3    Convert xyz to lab, with x = A, y = B and z = C
	XYZ2RGB    3  3    Convert xyz to rgb, with x = A, y = B and z = C
	Y0         1  1    Bessel function of A (2nd kind, order 0)
	Y1         1  1    Bessel function of A (2nd kind, order 1)
	YN         2  1    Bessel function of A (2nd kind, order B)
	ZCRIT      1  1    Normal distribution critical value for alpha = A
	ZCDF       1  1    Normal cumulative distribution function for z = A
	ZPDF       1  1    Normal probability density function for z = A
	ROOTS      2  1    Treats col A as f(t) = 0 and returns its roots

	The special symbols are:

	PI                  = 3.1415926...
	E                   = 2.7182818...
	EULER               = 0.5772156...
	PHI (golden ratio)  = 1.6180339...
	F_EPS (single eps)  = 1.192092896e-07
	D_EPS (double eps)  = 2.2204460492503131e-16
	TMIN, TMAX, TRANGE, or TINC = the corresponding constant.
	N                   = number of records.
	T                   = table with t-coordinates.
	TNORM               = table with normalized [-1 to +1] t-coordinates.
	TROW                = table with row numbers 0, 1, ..., N-1.

	Use macros for frequently used long expressions; see the gmtmath man page.
	Store stack to named variable via STO@<label>, recall via [RCL]@<label>, clear via CLR@<label>.

	OPTIONS:

	-A Set up and solve a linear system A x = b, and return vector x.
	   Requires -N and initializes extended matrix [A | b] from <ftable> holding t and f(t) only.
	   t goes into column <t_col> while f(t) goes into column <n_col> - 1 (i.e., r.h.s. vector b).
	   No additional data files are read.  Output will be a single column with coefficients.
	   Append +r to only place f(t) in b and leave A initialized to zeros.
	   Append +w if 3rd column contains weights and +s if 3rd column contains 1-sigmas.
	   Append +e to evaluate solution and write t, f(t), the solution, residuals[, weight|sigma].
	   Use either LSQFIT or SVDFIT to solve the [weighted] linear system.
	-C Change which columns to operate on [Default is all except time].
	   -C reverts to the default, -Cr toggles current settings, and -Ca selects all columns.
	-E Set minimum eigenvalue used by LSQFIT and SVDFIT [1e-7].
	-I Reverse the output sequence into descending order [ascending].
	-L Apply operators on a per-segment basis [cumulates operations across file].
	-N Set the number of columns and optionally the id of the time column (0 is first) [2/0].
	   If input files are given, -N will add extra columns initialized to zero, if needed.
	-Q Quick scalar calculator (Shorthand for -Ca -N1/0 -T0/0/1).
	   Allows constants to have plot units (i.e., c|i|p); if so the answer is converted using PROJ_LENGTH_UNIT.
	-S Only write first row upon completion of calculations [write all rows].
	   Optionally, append l for last row or f for first row [Default].
	-T Set domain from <min> to <max> in steps of <inc>. Append +n to <inc if number of points was given instead.
	   Append +b for log2 spacing in <inc> and +l for log10 spacing via <inc> = 1,2,3.
	   Alternatively, give a file with output times in the first column, or a comma-separated list.
	   If no domain is given we assume no time, i.e., only data columns are present.
	   This choice also implies -Ca.
	-V Change the verbosity level (currently v).
	   Choose among 6 levels; each level adds more messages:
	     q - Quiet, not even fatal error messages.
	     n - Normal verbosity: only error messages.
	     c - Also produce compatibility warnings [Default when no -V is used].
	     v - Verbose progress messages [Default when -V is used].
	     l - Long verbose progress messages.
	     d - Debugging messages.
	-bi For binary input; [<n>]<type>[w][+l|b]; <type> = c|u|h|H|i|I|l|L|f|D.
	    Prepend <n> for the number of columns for each <type>.
	-bo For binary output; append <type>[w][+l|b]; <type> = c|u|h|H|i|I|l|L|f|D..
	    Prepend <n> for the number of columns for each <type>.
	-d On input, replace <nodata> with NaN; on output do the reverse.
	-e Only accept input data records that contain the string "pattern".
	   Use -e~"pattern" to only accept data records that DO NOT contain this pattern.
	   If your pattern begins with ~, escape it with \~.  To match against
	   extended regular expressions use -e[~]/regexp/[i] (i for case-insensitive).
	   Give +f<file> for a file list with such patterns, one per line.
	   To give a single pattern starting with +f, escape it with \+f.
	-f Special formatting of input/output columns (time or geographical).
	   Specify i(nput) or o(utput) [Default is both input and output].
	   Give one or more columns (or column ranges) separated by commas.
	   Append T (Calendar format), t (time relative to TIME_EPOCH),
	   f (floating point), x (longitude), y (latitude) to each item.
	   -f[i|o]g means -f[i|o]0x,1y (geographic coordinates).
	   -f[i|o]c means -f[i|o]0-1f (Cartesian coordinates).
	   -fp[<unit>] means input x,y are in projected coordinates.
	-g Use data point separations to determine if there are data gaps.
	   Append x|X or y|Y to identify data gaps in x or y coordinates,
	   respectively, and append d|D for distance gaps.  Upper case X|Y|D means
	   we first project the points (requires -J).  Append <gap>[unit][+n|p]; +n uses
	   d=prev-curr, +p uses d=curr-prev [d=|curr-prev|]; d must exceed <gap> to detect a gap.
	   For geographic data: choose from e|f|k|M|n|u [Default is meter (e)].
	   For gaps based on mapped coordinates: choose unit from c|i|p [cm].
	   For time data: the unit is controlled by TIME_UNIT.
	   For generic data: the unit is as the data implies (user units).
	   Repeat the -g option to specify multiple criteria, and add -ga
	   to indicate that all criteria must be met [just one must be met].
	-h[i|o][<n>][+c][+d][+r<remark>][+t<title>] Input/output file has [0] Header record(s) [OFF]
	   Optionally, append i for input or o for output only and/or number of header records [0].
	     -hi turns off the writing of all headers on output since none will be read.
	   Append +c to add header record with column information [none].
	   Append +d to delete headers before adding new ones [Default will append headers].
	   Append +r to add a <remark> comment to the output [none].
	   Append +t to add a <title> comment to the output [none].
	     (these strings may contain \n to indicate line-breaks)
	   For binary files, <n> is considered to mean number of bytes.
	-i Set alternate input column order and optional transformations [Default reads all columns in original order].
	   Append list of columns; t[<word>] = trailing text; use <word> to pick a word from the text.
	   Use -in for considering numerical input only.
	-o Set alternate output column order [Default writes all columns in order].
	   Append list of columns; t[<word>] = trailing text; use <word> for writing a single word from the text.
	   Use -on for numerical output only.
	-q Select input (-q or -qi) or output (-qo) rows to process [Default reads or writes all rows].
	   Append comma-separated lists of rows or row ranges; prepend ~ to exclude those ranges instead.
	   Append +f or +s to reset row counters per table or segment [per set (+a)].
	   For limits on data values instead, append +c<col> and give data limits for column <col>.
	-s Suppress output for records whose z-value (col = 2) equals NaN
	   [Default prints all records].
	   Append <cols> to examine other column(s) instead [2].
	   Append +a to suppress records where any column equals NaN, or
	   append +r to reverse the suppression (only output z = NaN records).
	-^ (or -) Print short synopsis message.
	-+ (or +) Print longer synopsis message.
	-? (or no arguments) Print this usage message.
	--PAR=<value> Temporarily override GMT default setting(s) (repeatable).
	(See gmt.conf man page for GMT default parameters).
